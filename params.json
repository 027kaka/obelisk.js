{"name":"Obelisk.js","tagline":"JavaScript Engine to Build Pixel Isometric Element with HTML5 Canvas","body":"# Obelisk.js\r\n\r\nObelisk.js is an open source JavaScript engine to build pixel isometric objects.\r\n\r\nWith this engine, you can easily add isometric pixel element like brick, cube, pyramid onto HTML5 canvas.\r\n\r\nThis is not just for game, step into and try to pixelate something. Have fun.\r\n\r\n## Showcase\r\n\r\nInput Text Rendering: http://codepen.io/nosir/details/IxBJn\r\n\r\nGIF Animation Rendering: http://codepen.io/nosir/details/mdiHe (Webkit Browser Only)\r\n\r\nPixel Isometirc Flappy Bird: http://codepen.io/nosir/details/rzaLA\r\n\r\nCube Generator: http://codepen.io/nosir/details/ganrh\r\n\r\n## Getting started\r\n\r\n1. Include obelisk.js on your page\r\n\r\n    ```html\r\n    <script src=\"//your-path/obelisk.min.js\"></script>\r\n    ```\r\n\r\n2. Create pixel world\r\n\r\n    ```javascript\r\n    // create pixel isometric 2.5D axis zero point\r\n    var point = new obelisk.Point(200, 200);\r\n\r\n    // create world instance to nest everything\r\n    // canvas could be either DOM or jQuery element\r\n    var pixelView = new obelisk.PixelView(canvas, point);\r\n\r\n    // create cube dimension and color instance\r\n    var dimension = new obelisk.CubeDimension(80, 100, 120);\r\n    var gray = obelisk.ColorPattern.GRAY;\r\n    var color = new obelisk.CubeColor().getByHorizontalColor(gray);\r\n\r\n    // build cube with dimension and color instance\r\n    var cube = new obelisk.Cube(dimension, color, true);\r\n\r\n    // render primitive into view\r\n    pixelView.renderObject(cube);\r\n    ```\r\n\r\n## Demo tutorials\r\n\r\nCube: http://jsfiddle.net/nosir/ygWEW/\r\n\r\nPyramid : http://jsfiddle.net/nosir/ZVURu/\r\n\r\nBrick: http://jsfiddle.net/nosir/6MuVr/\r\n\r\nSideX & SideY: http://jsfiddle.net/nosir/bLsew/\r\n\r\n## Roadmap\r\n\r\nTo add more primitives like slope...\r\n\r\n## References\r\n\r\n[Isometric projection](http://en.wikipedia.org/wiki/Isometric_projection)\r\n\r\n[Isometric graphics in video games and pixel art](http://en.wikipedia.org/wiki/Isometric_graphics_in_video_games_and_pixel_art)\r\n\r\n[Flood fill](http://en.wikipedia.org/wiki/Flood_fill)\r\n","google":"UA-44036545-1","note":"Don't delete this file! It's used internally to help with page regeneration."}